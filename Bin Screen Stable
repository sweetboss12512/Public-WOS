-- At the time of writing this, stable doesn't allow ui layouts. This is a compromise.
local Screen = GetPartFromPort(1, "Screen")
local Bins = GetPartsFromPort(2, "Bin")
local Containers = GetPartsFromPort(2, "Containers")

local ScreenDimensions = Screen:GetDimensions()
Screen:ClearElements()

local ScreenBinInfoElements = {} -- I need shorter names man
local ResourceTable = {}

local MainFrame = Screen:CreateElement("ScrollingFrame", {
	AnchorPoint = Vector2.new(0.5, 0.5),
	Size = UDim2.fromScale(1, 1),
	Position = UDim2.fromScale(0.5, 0.5),
	BackgroundColor3 = Color3.fromRGB(150, 150, 150),
	BorderSizePixel = 0,
	CanvasSize = UDim2.fromScale(0, 5)
})

local BinButtonInfo = {
	AnchorPoint = Vector2.new(0.5, 0),
	Size = UDim2.fromScale(.8, .02),
	Position = UDim2.new(.5, 0, .01, 10),
	TextScaled = true,
	BorderSizePixel = 4,
	Font = Enum.Font.Code
}

local RefreshButton = Screen:CreateElement("TextButton", {
	Size = UDim2.fromScale(.05, .05),
	Text = "",
	BackgroundColor3 = Color3.fromRGB(255, 0, 0),
	BorderSizePixel = 0
})

local Colors = { -- Vanity, the colors  the gui can be
	BrickColor.new("Really red"),
	BrickColor.new("Dark blue blue"),
	BrickColor.new("Bright blue"),
	BrickColor.new("Royal blue"),
	BrickColor.new("Mint"),
	BrickColor.new("Copper"),
	BrickColor.new("Bright orange")
}

local REFRESH_COOLDOWN = 2

local onRefreshCooldown = false
local offset = 0

local function CreateNewBinInfo(resourceName)
	local newBinButton = Screen:CreateElement("TextButton", BinButtonInfo)
	MainFrame:AddChild(newBinButton)
	
	newBinButton.Text = resourceName
	newBinButton.BackgroundColor3 = Colors[math.random(1, #Colors)].Color
	
	newBinButton.Position += UDim2.fromScale(0, offset)
	
	local onCooldown = false
	
	newBinButton.MouseButton1Click:Connect(function()
		if not onCooldown then
			onCooldown = true
			
			newBinButton.Text = ResourceTable[resourceName]
			task.wait(1.5)
			onCooldown = false
			newBinButton.Text = resourceName
		end
	end)
	
	ScreenBinInfoElements[resourceName] = newBinButton
	offset += (newBinButton.Size.Y.Scale + 0.005)
end

local function InsertResouces()
	table.clear(ResourceTable)
	
	Bins = GetPartsFromPort(2, "Bin")
	Containers = GetPartsFromPort(2, "Container")

	for _, bin in ipairs(Bins) do
		local resource = bin:GetResource()
		local amount = bin:GetAmount()
		
		if resource ~= "nil" then -- So the bin has to have a resource to be shown
			if ResourceTable[resource] then
				ResourceTable[resource] += amount
			else
				ResourceTable[resource] = amount
			end
		end
	end
	
	for _, container in ipairs(Containers) do
		local resource = container:GetResource()
		local amount = container:GetAmount()

		if resource ~= "nil" then
			amount = math.round(amount) -- Container values can be non integers
			
			if ResourceTable[resource] then
				ResourceTable[resource] += amount
			else
				ResourceTable[resource] = amount
			end
		end
	end
end

local function UpdateScreen()
	if onRefreshCooldown then
		return
	end
	
	onRefreshCooldown = true
	
	for i, v in pairs(ScreenBinInfoElements) do
		v:Destroy()
		ScreenBinInfoElements[i] = nil
	end

	InsertResouces()
	offset = 0

	task.wait(1)

	for resourceName, resourceAmount in pairs(ResourceTable) do

		if not ScreenBinInfoElements[resourceName] then
			CreateNewBinInfo(resourceName)
		end
	end
	
	task.wait(REFRESH_COOLDOWN)
	onRefreshCooldown = false
end

UpdateScreen()
RefreshButton.MouseButton1Click:Connect(UpdateScreen)
